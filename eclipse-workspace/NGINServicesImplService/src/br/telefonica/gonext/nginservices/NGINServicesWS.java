
package br.telefonica.gonext.nginservices;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "NGINServicesWS", targetNamespace = "http://telefonica.br/GONext/NGINServices")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NGINServicesWS {


    /**
     * 
     * @param userManagementIn
     * @param cleanNginIn
     * @return
     *     returns br.telefonica.gonext.nginservices.CleanNginOut
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cleanNgin", targetNamespace = "http://telefonica.br/GONext/NGINServices", className = "br.telefonica.gonext.nginservices.CleanNgin")
    @ResponseWrapper(localName = "cleanNginResponse", targetNamespace = "http://telefonica.br/GONext/NGINServices", className = "br.telefonica.gonext.nginservices.CleanNginResponse")
    @Action(input = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/cleanNginRequest", output = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/cleanNginResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/cleanNgin/Fault/Exception")
    })
    public CleanNginOut cleanNgin(
        @WebParam(name = "userManagementIn", targetNamespace = "")
        UserManagementIn userManagementIn,
        @WebParam(name = "CleanNginIn", targetNamespace = "")
        CleanNginIn cleanNginIn)
        throws Exception_Exception
    ;

    /**
     * 
     * @param cleanSDPIn
     * @param userManagementIn
     * @return
     *     returns br.telefonica.gonext.nginservices.CleanSDPOut
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cleanSDP", targetNamespace = "http://telefonica.br/GONext/NGINServices", className = "br.telefonica.gonext.nginservices.CleanSDP")
    @ResponseWrapper(localName = "cleanSDPResponse", targetNamespace = "http://telefonica.br/GONext/NGINServices", className = "br.telefonica.gonext.nginservices.CleanSDPResponse")
    @Action(input = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/cleanSDPRequest", output = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/cleanSDPResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/cleanSDP/Fault/Exception")
    })
    public CleanSDPOut cleanSDP(
        @WebParam(name = "userManagementIn", targetNamespace = "")
        UserManagementIn userManagementIn,
        @WebParam(name = "CleanSDPIn", targetNamespace = "")
        CleanSDPIn cleanSDPIn)
        throws Exception_Exception
    ;

    /**
     * 
     * @param userManagementIn
     * @param getSDPIn
     * @return
     *     returns br.telefonica.gonext.nginservices.GetSDPOut
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSDP", targetNamespace = "http://telefonica.br/GONext/NGINServices", className = "br.telefonica.gonext.nginservices.GetSDP")
    @ResponseWrapper(localName = "getSDPResponse", targetNamespace = "http://telefonica.br/GONext/NGINServices", className = "br.telefonica.gonext.nginservices.GetSDPResponse")
    @Action(input = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/getSDPRequest", output = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/getSDPResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/getSDP/Fault/Exception")
    })
    public GetSDPOut getSDP(
        @WebParam(name = "userManagementIn", targetNamespace = "")
        UserManagementIn userManagementIn,
        @WebParam(name = "GetSDPIn", targetNamespace = "")
        GetSDPIn getSDPIn)
        throws Exception_Exception
    ;

    /**
     * 
     * @param sincronizeCareCoreNginIn
     * @param userManagementIn
     * @return
     *     returns br.telefonica.gonext.nginservices.SincronizeCareCoreNginOut
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sincronizeCareCoreNgin", targetNamespace = "http://telefonica.br/GONext/NGINServices", className = "br.telefonica.gonext.nginservices.SincronizeCareCoreNgin")
    @ResponseWrapper(localName = "sincronizeCareCoreNginResponse", targetNamespace = "http://telefonica.br/GONext/NGINServices", className = "br.telefonica.gonext.nginservices.SincronizeCareCoreNginResponse")
    @Action(input = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/sincronizeCareCoreNginRequest", output = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/sincronizeCareCoreNginResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/sincronizeCareCoreNgin/Fault/Exception")
    })
    public SincronizeCareCoreNginOut sincronizeCareCoreNgin(
        @WebParam(name = "userManagementIn", targetNamespace = "")
        UserManagementIn userManagementIn,
        @WebParam(name = "SincronizeCareCoreNginIn", targetNamespace = "")
        SincronizeCareCoreNginIn sincronizeCareCoreNginIn)
        throws Exception_Exception
    ;

    /**
     * 
     * @param sincronizeExternalPlatformIn
     * @param userManagementIn
     * @return
     *     returns br.telefonica.gonext.nginservices.SincronizeExternalPlatformOut
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sincronizeExternalPlatform", targetNamespace = "http://telefonica.br/GONext/NGINServices", className = "br.telefonica.gonext.nginservices.SincronizeExternalPlatform")
    @ResponseWrapper(localName = "sincronizeExternalPlatformResponse", targetNamespace = "http://telefonica.br/GONext/NGINServices", className = "br.telefonica.gonext.nginservices.SincronizeExternalPlatformResponse")
    @Action(input = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/sincronizeExternalPlatformRequest", output = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/sincronizeExternalPlatformResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/sincronizeExternalPlatform/Fault/Exception")
    })
    public SincronizeExternalPlatformOut sincronizeExternalPlatform(
        @WebParam(name = "userManagementIn", targetNamespace = "")
        UserManagementIn userManagementIn,
        @WebParam(name = "SincronizeExternalPlatformIn", targetNamespace = "")
        SincronizeExternalPlatformIn sincronizeExternalPlatformIn)
        throws Exception_Exception
    ;

    /**
     * 
     * @param migratePostPaidToPreIn
     * @param userManagementIn
     * @return
     *     returns br.telefonica.gonext.nginservices.MigratePostPaidToPreOut
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "migratePostPaidToPre", targetNamespace = "http://telefonica.br/GONext/NGINServices", className = "br.telefonica.gonext.nginservices.MigratePostPaidToPre")
    @ResponseWrapper(localName = "migratePostPaidToPreResponse", targetNamespace = "http://telefonica.br/GONext/NGINServices", className = "br.telefonica.gonext.nginservices.MigratePostPaidToPreResponse")
    @Action(input = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/migratePostPaidToPreRequest", output = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/migratePostPaidToPreResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/migratePostPaidToPre/Fault/Exception")
    })
    public MigratePostPaidToPreOut migratePostPaidToPre(
        @WebParam(name = "userManagementIn", targetNamespace = "")
        UserManagementIn userManagementIn,
        @WebParam(name = "MigratePostPaidToPreIn", targetNamespace = "")
        MigratePostPaidToPreIn migratePostPaidToPreIn)
        throws Exception_Exception
    ;

    /**
     * 
     * @param cleanExternalPlatformIn
     * @param userManagementIn
     * @return
     *     returns br.telefonica.gonext.nginservices.CleanExternalPlatformOut
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cleanExternalPlatform", targetNamespace = "http://telefonica.br/GONext/NGINServices", className = "br.telefonica.gonext.nginservices.CleanExternalPlatform")
    @ResponseWrapper(localName = "cleanExternalPlatformResponse", targetNamespace = "http://telefonica.br/GONext/NGINServices", className = "br.telefonica.gonext.nginservices.CleanExternalPlatformResponse")
    @Action(input = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/cleanExternalPlatformRequest", output = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/cleanExternalPlatformResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/cleanExternalPlatform/Fault/Exception")
    })
    public CleanExternalPlatformOut cleanExternalPlatform(
        @WebParam(name = "userManagementIn", targetNamespace = "")
        UserManagementIn userManagementIn,
        @WebParam(name = "CleanExternalPlatformIn", targetNamespace = "")
        CleanExternalPlatformIn cleanExternalPlatformIn)
        throws Exception_Exception
    ;

    /**
     * 
     * @param userManagementIn
     * @param retrieveHistoryMsisdnIn
     * @return
     *     returns br.telefonica.gonext.nginservices.RetrieveHistoryMsisdnOut
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "retrieveHistoryMsisdn", targetNamespace = "http://telefonica.br/GONext/NGINServices", className = "br.telefonica.gonext.nginservices.RetrieveHistoryMsisdn")
    @ResponseWrapper(localName = "retrieveHistoryMsisdnResponse", targetNamespace = "http://telefonica.br/GONext/NGINServices", className = "br.telefonica.gonext.nginservices.RetrieveHistoryMsisdnResponse")
    @Action(input = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/retrieveHistoryMsisdnRequest", output = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/retrieveHistoryMsisdnResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/retrieveHistoryMsisdn/Fault/Exception")
    })
    public RetrieveHistoryMsisdnOut retrieveHistoryMsisdn(
        @WebParam(name = "userManagementIn", targetNamespace = "")
        UserManagementIn userManagementIn,
        @WebParam(name = "RetrieveHistoryMsisdnIn", targetNamespace = "")
        RetrieveHistoryMsisdnIn retrieveHistoryMsisdnIn)
        throws Exception_Exception
    ;

    /**
     * 
     * @param userManagementIn
     * @param retrieveProfileIn
     * @return
     *     returns br.telefonica.gonext.nginservices.RetrieveProfileOut
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "retrieveProfile", targetNamespace = "http://telefonica.br/GONext/NGINServices", className = "br.telefonica.gonext.nginservices.RetrieveProfile")
    @ResponseWrapper(localName = "retrieveProfileResponse", targetNamespace = "http://telefonica.br/GONext/NGINServices", className = "br.telefonica.gonext.nginservices.RetrieveProfileResponse")
    @Action(input = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/retrieveProfileRequest", output = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/retrieveProfileResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://telefonica.br/GONext/NGINServices/NGINServicesWS/retrieveProfile/Fault/Exception")
    })
    public RetrieveProfileOut retrieveProfile(
        @WebParam(name = "userManagementIn", targetNamespace = "")
        UserManagementIn userManagementIn,
        @WebParam(name = "RetrieveProfileIn", targetNamespace = "")
        RetrieveProfileIn retrieveProfileIn)
        throws Exception_Exception
    ;

}
